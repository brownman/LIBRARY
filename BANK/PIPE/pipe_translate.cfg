#isdlkjf
pipe_translate_test(){
    ( pipe_translate dog )
}
pipe_translate_motivation(){
    #str=$( xcowfortune1 )
local str=$( fortune -s )
    ( pipe_translate_random "$str" )
    echo
}

pipe_translate_random_line(){
local file=$1
assert file_has_content $file
local line=$( random_line $file )
print_g gay $line
commander sleep 4
commander pipe_translate_random $line

}
pipe_translate_random(){
    [ $# -eq 0 ] && { return 1; }
    local str1=$( echo "$@" | cut -d'-' -f1 )
    notify-send1 "$str1"
    print ok "$FUNCNAME $str1"

    commander "assert file_exist $file_language"
    print_g pv "[ languages to learn: ] "
    cat1 $file_language true

    local lang=$( random_line    $file_language )
    local builtin_translate=$( use_sh translate )
    local cmd="$builtin_translate $lang $str1"
    commander "$cmd" 
}


pipe_translate(){
    use cat1
    set -o nounset
    local line
    [ $# -eq 0 ] && { return 1; }


    use_sh translate
#assert var_exist file_language
    assert file_exist "$file_language"
    local str1=$( echo "$@" | cut -d'-' -f1 )
    [ -z "$str1" ] && { return 1; }
    local cmd=''
    cat1    $file_language true
    while read line;do
        local cmd="$builtin_translate $line $str1"
        trace "[cmd] $cmd"
        commander $cmd
    done < $file_language
}
export -f pipe_translate

export -f pipe_translate_random
export -f pipe_translate_random_line

export -f pipe_translate_motivation
