#https://github.com/keenerd/packer/blob/master/packer
install1_test(){
    install1 bash
}
install1_python(){

    set -o nounset
    local package="$1"
    set +o nounset
    python_activate

    set -o nounset
    commander_n pip install $package

}

install1(){
export MODE_SLEEP=true
    local package="$1"

    dependOn DISTRO/distro1.cfg
    distro=${distro:-$( $distro )}
    cmd_check_package=${cmd_check_package:-$( os_check_package "$distro" )}
    #    cmd_check_package_remote=${cmd_check_package_remote:-$( os_check_package_remote "$distro" )}
    cmd_installer=${cmd_installer:-$( os_installer "$distro" )}
    SUDO=${SUDO:-$( os_user )}

    #print_color 33 "SUDO: $SUDO"
    echo -n "[ $package ] "
    commander "$SUDO $cmd_check_package $package"  &>/dev/null  

    res=$?


    if [ $res -ne 0 ];then
        commander "$SUDO $cmd_installer $package" &>/dev/null 
        #&>/dev/null 
        res=$?
        ( test $res -eq 0 ) || ( print error "$package -  is not in your repositories - add it first"; cat1 "$dir_root/LIST/RESCUE/$package.txt" true; sleep 3; ) 
    fi
}


self_install1(){
    local str=''
    if [ $# -eq 0 ];then
        file="${BASH_SOURCE[1]}"
        str=$(parse_tag "$file" "depend")
        echo "[confirm] installation of: $str"
        echo "press a key to continue"
        read
    else
        str="$@"
    fi
    echo "[DEPENDENCIES]"
    command "$str" &>/dev/null
    local res=$?
    indicator "$res"
    if [ $res -eq 0 ];then
        print ok "[package] already exist: $str"
    else
        print_color 33 "[package] installing: $str"
        #yaourt -S --noconfirm ${str}
        install1 ${str}
    fi
}


export -f install1
export -f install1_python
export -f self_install1
