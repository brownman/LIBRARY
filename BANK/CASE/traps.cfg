traps(){
print func
  local type="$1"
print color 33 "[type] $type"

    case $type in
    err)
    trap_err
    ;;
  term)
    trap_term
    ;;
  exit)
    trap_exit
    ;;
  **)
    print error no handler for type: $type
    ;;
  esac
}


trap_term(){
  xcowsay "TERMINATED: $0"
}


trap_err(){
  use print
#use update_clipboard

    print func

#$cmd_trap_exit
#trap  | grep EXIT 

    print error
#echo "`caller`"
#echo $str_caller
    $str_caller
#eval "$str_caller"
#update_clipboard errr "gvim +${str}"
    exit 0
}
trap_exit(){
  local res=${1:-$?}

#$str_caller
  use print
    use indicator
    print func

    indicator $res


#return 0
    exit 0
}

cmds(){
export cmd_trap_err='trap trap_err ERR'
export cmd_trap_exit='trap trap_exit EXIT'
export cmd_trap_term='trap trap_term SIGTERM'
}
cmds_activate(){
$cmd_trap_err
$cmd_trap_exit
$cmd_trap_term
}
cmds
cmds_activate
export -f trap_err
export -f trap_term
export -f trap_exit
export -f traps





