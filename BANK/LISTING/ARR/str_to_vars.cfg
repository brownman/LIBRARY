
str_to_vars_test_serve(){
#'my_name1 xxxxnumber2'
 str_to_vars 'name number' "$*"; 
echo number: $number
echo name: $name
}
str_to_vars_test(){
    clear
    set +o nounset
    echo test_ok
( str_to_vars "var1 var2 var3" "content1 content2 content3"; test -v var1 &&   echo "var1 content is \$var1 equals to $var1"; )
print_line
echo test_err
( str_to_vars "var1 var2 var3" "content1 content2"; test -v var1  && echo "var1 content is \$var1 equals to $var1"; )
print_line
echo test_empty_input
( str_to_vars "var1 var2 var3" ""; test -v var1 &&  echo "var1 content is \$var1 equals to $var1"; )
}

str_to_vars(){
    #set -o nounset
    #set -x
    local res=0
str1="${1:-}"
    str2="${2:-}"

    [  $# -ne 2  ] && { res=1; }
    [ -z "$str1"  ] && { res=2; }
    [  -z "$str2"  ] && { res=3; }
    [ $res -ne 0 ] && { print error "[err_code: $res] need 2 strings with the same number of items"; exit 1; }

    local arr1=( $str1 )
        local arr2=( $str2 )
    
#
#override file_txt color size point_size x y )
    str1="${arr1[@]}"
    str2="${arr2[@]}"

    max1=${#arr1[@]}
    max2=${#arr2[@]}
    #echo $max
echo
    echo "$max1"
    echo "$str1"
echo
    echo "$max2"
echo "$str2"
echo

    echo $str1 > /tmp/list
    [ $max1  -ne $max2 ] && { print error "need $max1 args , got $max2 args"; return 1; }
#;print ok "please supply these Arguments:\n$str1";exit 1; }
    #read day month year <<< $(date +'%d %m %y')
    #read file_txt color size point_size
    read ${str1} <<< $( echo $str2 )
    #echo $str1
#figlet1 results
    for item in $str1;do
        eval echo "$item : \$$item"
    done

}
export -f str_to_vars

export -f str_to_vars_test
