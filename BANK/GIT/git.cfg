 #git rm --cached path/to/submodule
git_pull_not(){
    #http://longair.net/blog/2009/04/16/git-fetch-and-merge/
git fetch && rebase
}
git_submodule_rm_test(){
    type $FUNCNAME 
    return
 git rm --cached SUBMODULE/jhbuild/ #path/to/submodule
 vi .gitmodules 
 vi .git/config 
 ls
 git submodule foreach 
 git submodule init
 git submodule update 
 }

git_submodule_rm(){
#http://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule
cat << FILE
#You must remove the entry in .gitmodules and .git/config, and remove the directory of the module from the history:

#git rm --cached path/to/submodule
#If you'll write on git's mailing list probably someone 
FILE
}


git1(){
#    First commit any outstanding code changes, and then, run this command:

    git rm -r --cached .
#    This removes any changed files from the index(staging area), then just run:

    git add .
#    Commit it:

    git commit -m ".gitignore is now working"
}
git_which_are_the_remotes(){
    git branch --remote
}
git_log_1(){
    git log --since='last month' --pretty=format:'%h,%an,%ar,%s' 

}
export -f git1
