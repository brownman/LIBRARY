dialog_recent(){
use assert
assert left_bigger $# 1
local desc="$1"
shift
local line="$@" 
local file=/tmp/recent.txt 
local line1="$desc: $line"
( exec 2>/dev/null; cat $file | grep "$line" )  ||   ( echo "$line1"  >> $file )

#hotkey_override.sh
#chmod u+x /tmp/hotkey_override.sh
#notify-send 'recent optional hotkey (alt+f2)' "$desc"
}

dialog_optional_list_test(){
file=/tmp/blaa_list.txt
dialog_optional_list  $file
res=$?
echo $res
test $res -eq 0 && ( rm $file )
}

dialog_optional_cmd(){
local str1="$1"
local str2="$2"
dialog_optional "$str1" 
res=$?
if [ $res -eq 0 ];then
 commander "$str2" 
else
 echo 1>&2 "[SKIP] $str2" 
fi
return $res

}


dialog_optional_edit(){
  local file="$1"
  local filename="`basename $file`"
use touch1
  if [ ! -f $file ];then
    echo 1>&2  $file
    dialog_optional "create file: $file" && ( commander touch1 $file ) || { return 1; }
  fi

  dialog_optional_cmd  "edit list ? $filename" "gvim -f $file"
}

dialog_optional_test(){
  (    dialog_optional 'title0' 'pick mission1 ' 'skip mission1' ) 
  echo $?
}
dialog_optional(){
  use vars
  use flite1
  #  echo 1>&2 "$FUNCNAME: `caller`"
  #figlet1 $FUNCNAME
  #    echo $(caller)
  #local str_caller="$(caller)"
  #echo $str_caller
  #gxmessage2 "$str_caller" 
  #"$(str_caller)"

  local text="${1:-text0}"
  local sound=${2:-false}
  local title="${3:-optional!}"
  #"${2:-title0}"
  local text_else="${4:-}"
  [ "$sound" = true ] && ( flite1 "$text" )

  #voice lock

  local msg
  if [ -n "$text_else" ];then
    msg="1.$text\n OR \n2.$text_else ?"
  else
    msg="$text"
  fi
  cmd="yad --form --text=\"$msg\"  --title=\"$title\"  --geometry 100x50+0+100 $YAD_T"

  eval $cmd
  res=$?
  #echo 1>&2 "res: $res"
  #res=$?
  #voice unlock
  return $res

}
export -f dialog_optional
export -f dialog_optional_edit #quick edit of a list.txt
export -f dialog_optional_cmd
export -f dialog_recent
