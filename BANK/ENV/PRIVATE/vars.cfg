export file_language=/tmp/dir_root/.config/languages.txt
export file_gcalcli_config="$HOME/.gcalclirc"
#export file_workspace_lpi=$dir_root/LIST/BOOKMARK/workspaces_for_lpi.txt 
export SSID=229F
export GXMESSAGE='-ontop -sticky -center -wrap'

export FONT='serif  italic 19'
#eval gxmessage ..
export GXMESSAGE_T="$GXMESSAGE -timeout 20"
export GXMESSAGE_T_S="$GXMESSAGE_T -geometry 400x800"
export YAD='--center --sticky --on-top --auto-close'


export GXMESSAGE_FONT="-font '$FONT'"
export YAD_FONT="--fontname '$FONT'"


export YAD_T="$YAD --timeout=20 --timeout-indicator right"


export timeD='eval echo $(date)' #D - for dynamic
export NAME=ofer
export url_mindmap='http://drichard.org/mindmaps'
export url_calendar='http://google.com/calendar'
export url_tasks='https://mail.google.com/tasks/ig'
export url_travis='https://travis-ci.org/brownman/do_for_others_first'
export url_children_songs='http://www.mamalisa.com/?p=824&t=ec&c=120'
#__   ____ _ _ __ ___  
#\ \ / / _` | '__/ __| 
# \ V / (_| | |  \__ \ 
#  \_/ \__,_|_|  |___/ 
#                      
        time_update(){
        read day1 month1 year1 hour1 minute1 second1 <<< $(date +'%d %m %y %H %M %S')
        export date_ws="${day1}_${month1}_${year1}"
        export time_ws="${hour1}_${minute1}_${second1}"

        }

        time_update
#                  _             _              _  _   _                
#   _____   ____ _| |   ___  ___| |__   ___    | || |_(_)_ __ ___   ___ 
#  / _ \ \ / / _` | |  / _ \/ __| '_ \ / _ \  / __) __| | '_ ` _ \ / _ \
# |  __/\ V / (_| | | |  __/ (__| | | | (_) | \__ \ |_| | | | | | |  __/
#  \___| \_/ \__,_|_|  \___|\___|_| |_|\___/  (   /\__|_|_| |_| |_|\___|
#                                             |_|                      
    export time="${hour1}:${minute1}"
    export BROWSER='google-chrome-stable'
    export EDITOR=vim
    export EDITOR_GUI=gvim
    export TIMEOUT_SUSPEND=60
#export YAD_EXTRA='--window-icon="preferences-system" --timeout=20 --timeout-indicator bottom --undecorated --no-taskbar --no-buttons --skip-taskbar'
#
    export YAD_TIMEOUT='--timeout=20 --timeout-indicator right'
#--undecorated --no-taskbar --no-buttons --skip-taskbar'
#
#yad hi --timeout 20 --timeout-indicator right --title title --text text #
#
#

    restore(){
    set +o nounset
    set +e
    set +x
    }
# command xrandr &>/dev/null   && {
#export resolution_x=$( render_resolution_get | cut -d'x' -f1 )
#export resolution_y=$( render_resolution_get | cut -d'x' -f2 )
#} 

export -f restore
export -f time_update
decide_os(){
    local distro=''
        ls /etc/debian_version &>/dev/null
        res=$?
        if [ $res -eq 0 ];then
            distro=debian #surely comrads (quoted from "animal farm")
        else
            distro=arch
                fi
                echo $distro
}
export distro=$( decide_os )
    set +o nounset

    decide_render(){
        echo -n  1>&2 VGA1 disconnected ?
    (    xrandr | grep 'VGA1 disconnected' &>/dev/null )

            flag_tv=$?
            indicator $flag_tv
            local cmd1='$dir_root/CODE/RENDER/BANK/${distro}/display_only_rgb.sh' #turn off laptop screen
            local cmd0='$dir_root/CODE/RENDER/BANK/${distro}/display_both.sh' #
            local cmd="$( echo \$cmd${flag_tv} )"
#RUN: $cmd_render to activate the detected screen
     commander "$( eval echo $cmd ) "
    }
