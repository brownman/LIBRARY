#killall -SIGUSR1 conky
#note: kill -l #show signals
pid_conky_usr1(){
killall -SIGUSR1 conky
}

xcowsay1(){
    ( xcowsay "$@" &)
    }
pid_decide_name(){
    file_rel="$1" 
        filename=$(basename $file_rel)
        local file="/tmp/pid_${filename}.lock"
        echo "$file"
}

pid_test(){

    local file=/tmp/pid.sh
        touch $file
        echo 'pid_update "$$";xcowsay1 "kill me1";trap1(){ xcowsay1 im-dead; xcowsay1 im dead;};trap trap1 SIGINT;sleep 20 ; xcowsay1 yes-im-alive hehe;' > $file
        chmod u+x $file
        ( bash -c $file )&
        echo "[hint] please feel free to kill it"
        local timeout=3
        echo sleep $timeout second and then kill it
        sleep $timeout
        echo kill kill kill
        pid_terminate $file
}

pid_update(){
    assert more_then "$#" 0
        num=$1
        file_source="${BASH_SOURCE[1]:-$0}"
        local file=$( pid_decide_name "$file_source" )
        cmd="rm1 $file;file_update $file $num"
        commander "$cmd"
}

pid_terminate(){
    file_source="$1" 
        local file=$( pid_decide_name "$file_source" )
        if [ -f "$file"   ];then
            cmd="act_on_list $file 'kill -2'"
#sigterm -12'"
                commander "$cmd"
                fi
}
pid_exist(){
    local name="$1"
    ( set +e; ps -aux | grep "$name" | grep -v grep )
    res=$?
    indicator $res
    return $res

    }

export -f pid_terminate
export -f pid_exist
export -f pid_update
export -f pid_test
export -f pid_decide_name
export -f xcowsay1
