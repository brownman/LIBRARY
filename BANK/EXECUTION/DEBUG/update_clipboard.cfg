
clipboard_test(){
use commander
commander clipboard syntax $BASH_SOURCE 
}


update_clipboard() { 
    use print

    local desc="$1"
    shift 
    local args=(${@:-empty-clipboard});

    local cmd="${args[@]}";
    #    proxy present print_color 33 "[CLIPBOARD] $cmd";
    print color 33 "[ClipBoard] $cmd"
    #  proxy notify-send1 'update_clipboard' "$cmd"
    #print cowsay "$str"

    print_g notify-send "$desc"

    local mode_debug=${MODE_DEBUG:-false};
    if [ $mode_debug = true ]; then
        local str=$( gxmessage 'update clipboard' -entrytext "$cmd"  );
        echo $str | xsel --clipboard;
    else
        echo $cmd | xsel --clipboard;
    fi;
    #proxy sleep 1
}
clipboard(){

    use assert
    use commander
    use vars

    local url type file
    #
    type=${1:-spell}
    file=$2
    #validate
    assert file_exist $file 
    depend xsel

    cat $file | xsel --clipboard


    case $type in
        spell)
            url='http://lint.travis-ci.org/'
            ;;
        syntax)
            url='http://www.shellcheck.net'
            ;;
        **)
            print error "no handler for type: $type"
            return 1 
            ;;
    esac
    test -n "$url"  && (    commander  "$BROWSER $url"  )
}
export -f clipboard
export -f update_clipboard

