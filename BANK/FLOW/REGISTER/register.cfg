alias registerE="vi $BASH_SOURCE"
alias registerS="source $BASH_SOURCE"
register_test(){
use indicator
    touch /tmp/1.sh
register /tmp/1.sh
alias 1E
indicator
alias 1S
indicator
}
self_url(){
echo 'use: register_url_test'
}
register_url_test(){
    #url: http://google.com
    register_url $BASH_SOURCE
    }
register_url(){

    local file=${BASH_SOURCE[1]:-$0}
    #local str="$( read_tag $file http )"
#set -e

    dependOnMany dialog_confirm dialog_menu cat1 print_line print
    file_out=/tmp/urls
    cat $file  | grep 'http://' | grep -v grep | cut -d':' -f2- > $file_out
#grep 'http://' | grep -v grep | sed 's/^#//g' | sed 's/^url//g'  >$file_out
    cat1 $file_out true
   sleep 2 
    str=$(dialog_menu_echo $file_out)
    dialog_confirm "\$BROWSER $str"

}
register_one(){
    set -e
    #echo 1>&2 "$(caller)"
    #info: register() export/alias for  a file or use layout() to register a dir
    shopt -s expand_aliases
    set -o nounset
    #depend_var: dir_parent
    local    file="$1"
 #   local file=$( who_am_i $file0 )
 #  assert file_exist $file 

    local  filename=$(basename $file | cut -d'.' -f1)
    local  file_type=$(basename $file | cut -d'.' -f2)

    local dir=$(dirname $file)
    local dirname=$(basename $dir)
    local cmd=''
    local str="$( read_tag $file http )"
    #present print_color_n 33 "[URL]"
    #echo -e "${str}"
    read_tag_all $file http 33
   read_tag_all $file note 36
    
#    $(read_tag http)
    #echo "[edit] $cmd"
    # local str_res="$(eval "$cmd")"
    # local res=$?
    #if [ $res -eq 0 ];then
    #    alias url_${filename}="$str_res"
    #
    #    present print_color 33 "[url] $( alias "url_${filename}" )"
    #        fi

  #  str=$( read_tag $file pending )
   # [ -n "$str" ] && { present print_color 36 "$str" }

   # reg="[cfg|1st]"
  # reg='\.cfg$|\.1st$'
cmd="alias  ${filename}E='vi $file'"
    eval "$cmd"


   reg='cfg$|conf$|st$'
#match_test "$filetype" "$reg"
    if [[ $file_type =~ $reg ]];then
    #if [ $file_type = cfg ];then
#notify-send "$file_type"
        cmd="alias  ${filename}S='source $file'"
        eval "$cmd"
        # cmd="source $file"
        present print_color 32 "[+] ${dirname}/${filename}"
      #  echo "$cmd" >> /tmp/cfgs
        # eval "$cmd"
        str_res1=$( cat $file | grep 'export -f' )
        res1=$?
        if [ $res1 -ne 0  ];then

            #echo "str_res1:$str_res1"
            present print_color 34 "[warning] no -f exports\n"
#"no -f exports \n"

            #            echo    mv $file $dir_parent/.old1
        fi
    elif [ $file_type = sh ]; then
        #str_tmp=$(eval "echo ${filename}")
        present print_color 35 "[builtin_] $filename"
        #echo "$str_tmp"
cmd="export builtin_${filename}='$file'"
        eval "$cmd"
        cmd="alias  ${filename}S=\$builtin_${filename}"
        eval "$cmd"
    else
        present print_color 34 "[other] $filename"
#        notify-send "$filename"

    fi
    set +o nounset
}



use_register(){
local type="$1"
local name="$2"
local act="$3"
local file=$( cat /tmp/sourced_${type} | grep $name -m1 )
echo "[found file] $file"
commander "register_one '$file'"
}

use_find(){
    local args=( $@ )
    local cmd="${args}"
    local file=$( find1 "$cmd" )
    echo $file
}

register(){
    set +e

    #dependOn AWARE/where_am_i.cfg where_am_i
    #dependOn AWARE/who_am_i.cfg who_am_i
    #dependOn AWARE/realpath.cfg realpath
    
   use where_am_i
   use who_am_i
   use realpath
   set -u
set +e
    local file0="$1"
    local file=`who_am_i $file0`
    #echo "[edit] $EDITOR $file"
    #echo "[run] source $file"
    local filename=$(basename $file | cut -d'.' -f1)
    local type=$(basename $file | cut -d'.' -f2)
    echo "[ register ] $filename"
    alias ${filename}E="vim $file"
    if [ $type = sh ];then
    export builtin_${filename}="$file"
    alias ${filename}S="\$builtin_${filename}"
    else
    alias ${filename}S="source $file"
    fi


}

run1(){
echo
}


export -f register_one
export -f register
#export -f register_one_test
