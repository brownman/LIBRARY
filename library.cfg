#kill bg job:
#find . -name "*.[ch]" -exec grep -i -H ÃŸearch pharse" {} \;
#find -not -empty -type f -printf "%s\n" | sort -rn | uniq -d | xargs -I{} -n1
#find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate
#echo http://manoftoday.wikidot.com/xwindow
set -e
set -u
shopt -s expand_aliases
set -o nounset
alias idea='vim ~/idea.yaml'
jail(){
clear
use print
use commander

print color 33 '[jail] run safely:'
print line
set +e
( commander $@ )
echo 
print line
}


finder(){
  local util="$dir_CODE/find.sh"
  local str="$1"
  local cmd="$util $str"
  eval "$cmd" 2>/tmp/err 
  local res=$?
# test $res -eq 0 || (  echo cat /tmp/err; )
  return $res
}


where_am_i () 
{ 
  local file=${1:-"${BASH_SOURCE[1]}"};
  local rpath=$(readlink -m $file);
  local rcommand=${rpath##*/};
  local str_res=${rpath%/*};
  local dir_self="$( cd $str_res  && pwd )";
  echo "$dir_self"
}

install_anchor(){
#export

filename=`basename $BASH_SOURCE`
file_self="$dir_library/$filename"

#install an anchor for any other projects which may use this library 
if [ ! -f /tmp/library.cfg ] ;then
  ln -s $file_self /tmp
fi
}




export_vars(){
export AUDIODEV=null #travis - fix: no audio device 
export PATH=$PATH:/usr/local/bin
export gxmessage_err='gxmessage -file /tmp/err -title cmd_err -sticky -ontop -timeout 10'
export str_caller='eval echo $( caller )'
export dir_library=$(where_am_i $BASH_SOURCE)
export dir_CODE=$dir_library/BANK #shorter name
export file_updatedb="$dir_CODE/updatedb.sh" #index of files under the parent dir
}
export_funcs(){
export -f finder
export -f jail 
local file=$dir_CODE/use.cfg
 #register $file
source $file

local file=$dir_CODE/use_sh.cfg
# register $file 
source  $file
}

aliases(){
alias libraryE="vi $BASH_SOURCE"
alias libraryS="source $BASH_SOURCE"

alias cd_library='cd $dir_library'
alias updatedb2='$file_updatedb'
}

use1(){
echo 1>&2 $BASH_SOURCE

#type $FUNCNAME
use register
use ps1
use ps4
use history_sync
use quick_follow
use quick_remember
use print
#type print
use alias
print ok Activated Important stuff
set +e
set +o nounset
}

ensure_index(){
if [ ! -f /tmp/target ] || [ ! -s /tmp/target ];then
$dir_CODE/updatedb.sh
fi
}

step(){
local cmd="$@"
cmd="$@"
#echo "$cmd"
eval "$cmd"
}

steps_for_lib(){
#type $FUNCNAME

step export_vars #dir_library, file_library , dir_CODE( the library BANK/)
step install_anchor #/tmp/library.cfg
step ensure_index #index of library files: /tmp/target
step export_funcs #export -f use

step aliases  #updatedb+edit self+cd self

#echo step using #utilize: use()
#using #utilize: use()
}
alias step2='activate_important'
alias vi=vim
steps_for_lib
set +u
set +e
